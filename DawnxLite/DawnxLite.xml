<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DawnxLite</name>
    </assembly>
    <members>
        <member name="M:Dawnx.Algorithms.MathAlgorithm.NumberAlgorithm.Gcd(System.Int32,System.Int32)">
            <summary>
            Gets GCD(Greeting Common Divisor) number.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Dawnx.Ranges.IntegerRange.Create(System.Int32)">
            <summary>
            The range type represents an immutable sequence of numbers
                and is commonly used for looping a specific number of times in for loops.
            </summary>
            <param name="stop"></param>
        </member>
        <member name="M:Dawnx.Ranges.IntegerRange.Create(System.Int32,System.Int32)">
            <summary>
            The range type represents an immutable sequence of numbers
                and is commonly used for looping a specific number of times in for loops.
            </summary>
            <param name="start"></param>
            <param name="stop"></param>
        </member>
        <member name="M:Dawnx.Ranges.IntegerRange.Create(System.Int32,System.Int32,System.Int32)">
            <summary>
            The range type represents an immutable sequence of numbers
                and is commonly used for looping a specific number of times in for loops.
            </summary>
            <param name="start"></param>
            <param name="stop"></param>
            <param name="scan"></param>
        </member>
        <member name="M:Dawnx.Sequences.LetterSequence.GetNumber(System.String)">
            <summary>
            Gets the number of letter. It's start at 0. (For example, "A" is 0).
            </summary>
            <param name="letter"></param>
            <returns></returns>
        </member>
        <member name="M:Dawnx.Sequences.LetterSequence.GetLetter(System.Int32)">
            <summary>
            Gets the letter of number. It's start at "A". (For example, 0 is "A").
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Dawnx.Utilities.FileUtility.GetAllFiles(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Dawnx.Utilities.IPUtility.GetLongString(System.Net.IPAddress)">
            <summary>
            Converts a <see cref="T:System.Net.IPAddress"/>  into a long IP string.
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Dawnx.Utilities.ObjectUtility.GetPropertyDictionary(System.Object)">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.Dictionary`2"/> from an anonymouse type.
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Dawnx.Utilities.ObjectUtility.GetPropertyPureDictionary(System.Object,System.Boolean)">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.Dictionary`2"/> from an anonymouse type.
            </summary>
            <param name="instance"></param>
            <param name="ignorePrefix"></param>
            <returns></returns>
        </member>
        <member name="M:Dawnx.Utilities.RegexUtility.IPRange(System.String)">
            <summary>
            Compile IPv4RangeRegexExp to Regex.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
    </members>
</doc>
