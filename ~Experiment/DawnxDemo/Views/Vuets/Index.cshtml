@{
    ViewData["Title"] = "Vuets Simple";
}

<div class="page-header">
    <h1>Welcome <small>to Vuets</small></h1>
    <hr />
</div>

<div class="mt-4">
    <p>
        <b>Vuets</b> is a simple template that helps create <b style="color:red">Multi-Page vue applications</b> under <b>.NetCore MVC</b>.
    </p>
    <div class="text-center">
        <b style="margin-left:1em">ಥ_ಥ</b>
        <b style="margin-left:1em">ಥ_ಥ</b>
        <b style="margin-left:1em">ಥ_ಥ</b>
        <b style="margin-left:1em">ಥ_ಥ</b>
        <b style="margin-left:1em">ಥ_ಥ</b>
    </div>

    <div class="card mt-4">
        <div class="card-body">
            <p class="text-center">
                This project has yet to be officially launched, but you can get the latest notification by subscribing to the project on github:
            </p>
            <div class="text-center">
                <a href="https://github.com/zmjack/Vuets" target="_blank">https://github.com/zmjack/Vuets</a>
            </div>
        </div>
    </div>

    <p class="mt-4" style="color:red; font-weight:bold">
        The following information you need to understand:
    </p>
    <ol>
        <li class="mt-2">We have integrated two development modes to parse components: <b style="color:limegreen">.vue file</b> and <b style="color:chocolate">.ts file</b>.</li>
        <li class="mt-2">
            Usually, you only need to focus on developing <b>components</b> and applying them to your <b>app</b>.<br />
        </li>
        <li class="mt-2">
            For the first time, you can write your own components by referring to the files in the following directories:
            <ul>
                <li class="mt-2"><b>Vuets/apps</b></li>
                <li class="mt-2"><b>Vuets/components</b></li>
            </ul>
            <p></p>
            Remember, the component you created needs to be registered in file <b>Vuets/components/_plugin.ts</b>.

            <div class="card border-warning mt-2">
                <div class="card-body text-warning">
                    File nesting may hide details. You can click on the small triangle to the left of the file to expand the file details.
                </div>
            </div>
        </li>
        <li class="mt-2">
            In most cases,
            <ul>
                <li class="mt-2">
                    If you use <b style="color:chocolate">TypeScript</b>,<br />
                    there are three parts to developing a component: <b style="color:chocolate">.ts</b> file, <b style="color:deepskyblue">.html</b> and <b style="color:deeppink">.css</b> file.
                </li>
                <li class="mt-2">
                    If you use <b style="color:limegreen">.vue file</b>,<br />
                    you should write a file that contains the following three parts: <b style="color:deepskyblue">&lt;template&gt;</b>, <b style="color:lightseagreen">&lt;script&gt;</b>, <b style="color:deeppink">&lt;css&gt;</b>.
                </li>
            </ul>
            <div class="card border-success mt-2">
                <div class="card-body text-success">
                    We recommend using <b style="color:chocolate">TypeScript</b> for development to reduce syntax errors.<br />
                    If you also use <b>Dawnx CliTool</b>, you can try to use the <b>tsgen</b> command to convert a <b style="color:lightseagreen">C# model</b> to a <b style="color:chocolate">TypeScript interface</b> for data exchange.
                </div>
            </div>
        </li>
        <li class="mt-2">
            Let's take a look:
            <ul>
                <li class="mt-2">
                    <a asp-action="TsRender" target="_blank">Render a page using <b style="color:chocolate">TypeScript</b> (The Heroic Battle)</a>
                </li>
                <li class="mt-2">
                    <a asp-action="VueRender" target="_blank">Render a page using <b style="color:limegreen">.vue File</b> (The Hero Battle)</a>
                </li>
            </ul>
        </li>
    </ol>
    <div class="card border-success mt-2">
        <div class="card-body text-success">
            Using <b style="color:chocolate">TypeScript</b> to make the IDE to do <b>TypeInference</b> better, giving coding hints and reducing the side effects of <b style="color:lightseagreen">JavaScript</b> variables.
        </div>
    </div>

    <p class="mt-4" style="color:red; font-weight:bold">
        If you need to learn how to use <b style="color:chocolate">TypeScript</b> to write vue components, you can refer to the following information:
    </p>
    <ul class="list-group">
        <li class="list-group-item">
            <a href="https://github.com/vuejs/vue-class-component" target="_blank">https://github.com/vuejs/vue-class-component</a>
        </li>
        <li class="list-group-item">
            <a href="https://github.com/vuejs/vue-class-component" target="_blank">https://github.com/kaorun343/vue-property-decorator</a>
        </li>
    </ul>

    <p class="mt-4" style="color:red; font-weight:bold">
        I want a starry sky, thanks!
    </p>
    <div class="card mt-2">
        <div class="card-body">
            Star me: <a href="https://github.com/zmjack/Vuets" target="_blank">https://github.com/zmjack/Vuets</a>
        </div>
    </div>
</div>
