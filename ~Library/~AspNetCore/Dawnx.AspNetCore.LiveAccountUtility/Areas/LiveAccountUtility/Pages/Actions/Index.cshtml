@page
@model Dawnx.AspNetCore.LiveAccountUtility.Pages.Actions.IndexModel
@using Dawnx.AspNetCore.LiveAccount.Entities

@{
    ViewBag.Title = "Actions";

    var Items = ViewBag.Items as IEnumerable<LiveAction>;
}

<h2>LiveAction</h2>

<p>
</p>
<div>
    <form method="post">
        <button type="button" class="btn" onclick="action = 'SyncActions'; submit()">
            Sync Actions
        </button>
        <button type="button" class="btn" onclick="action = 'ClearInvalidActions'; submit()">
            Clear Invalid Items
        </button>
    </form>
</div>

<table class="table">
    <thead>
        <tr>
            <th>@(ViewModel<LiveAction>.DisplayName(_ => _.Area))</th>
            <th>@(ViewModel<LiveAction>.DisplayName(_ => _.Controller))</th>
            <th>@(ViewModel<LiveAction>.DisplayName(_ => _.Action))</th>
            <th>@(ViewModel<LiveAction>.DisplayName(_ => _.IsExisted))</th>
            <th>@(ViewModel<LiveAction>.DisplayName(_ => _.IsEnabled))</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Items.OrderBy(x => x.IsExisted).ThenBy(x => x.IsEnabled).ThenBy(x => x.Area).ThenBy(x => x.Controller).ThenBy(x => x.Action))
        {
            <tr>
                <td>@item.Display(_ => _.Area)</td>
                <td>@item.Display(_ => _.Controller)</td>
                <td>@item.Display(_ => _.Action)</td>
                <td>@item.Display(_ => _.IsExisted)</td>
                <td>@item.Display(_ => _.IsEnabled)</td>
            </tr>
        }
    </tbody>
</table>
